import frameself.format.*;
import java.util.Date;

rule "HousePersonInRfc"
	when
		Symptom(category == "HouseState:PersonIn", $value: value)
	then
		Rfc rfcLED = new Rfc();
		rfcLED.setCategory("SwitchOnLEDIn");
		rfcLED.setValue($value);
		rfcLED.setTimestamp(new Date());
		rfcLED.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLED);
end

rule "HousePersonOutRfc"
	when
		Symptom(category == "HouseState:PersonOut", $value: value)
	then
		Rfc rfcLED = new Rfc();
		rfcLED.setCategory("SwitchOnLEDOut");
		rfcLED.setValue($value);
		rfcLED.setTimestamp(new Date());
		rfcLED.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLED);
end

rule "HouseEmptyRfc"
	when
		Symptom(category == "HouseState:Empty")
		or Symptom(category == "VocalRecognition", value == "SwitchOff")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("SwitchOffLights");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		Rfc rfcLED = new Rfc();
		rfcLED.setCategory("SwitchOffLED");
		rfcLED.setTimestamp(new Date());
		rfcLED.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLED);
		insert(rfcLight);
end

rule "HouseNotEmptyRfc"
	when
		Symptom(category == "HouseState:NotEmpty")
		or Symptom(category == "VocalRecognition", value == "SwitchOn")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("SwitchOnLights");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLight);
end

rule "HouseIntruderRfc"
	when
		Symptom(category == "HouseState:Intruder")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("SwitchOnLightsRed");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLight);
end

rule "VoiceLightOn"
	when
		Symptom(category == "CommandRecognized", value == "switch on")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("SwitchOnLights");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLight);
end

rule "VoiceLightOff"
	when
		Symptom(category == "CommandRecognized", value == "switch off")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("SwitchOffLights");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLight);
end

rule "VoiceMoodLove"
	when
		Symptom(category == "CommandRecognized", value == "love")
	then
		Rfc rfcLight = new Rfc();
		rfcLight.setCategory("LoveMood");
		rfcLight.setTimestamp(new Date());
		rfcLight.setExpiry(new Date(System.currentTimeMillis()+4000));
		insert(rfcLight);
end

